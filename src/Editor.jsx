import React, { Component, Fragment } from "react"
import EmailEditor from "react-email-editor"
import { Button, Nav, Section, Input, Container } from "./App.style"
import ShortId from "shortid" //Using this Package for AutoGeneratedID

// Adding sample data for new template load
import sample from "./sample.json"

class Editor extends Component {
  constructor(props) {
    super(props)

    // Only doing this because to show Update and Save for Better UI/UX
    this.state = {
      typeTemplate:
        this.props.location.pathname.split("/")[1] === "edit"
          ? "update"
          : "save",
      templateID: this.props.match.params.id || ShortId.generate()
    }
  }

  render() {
    let { typeTemplate, templateID } = this.state

    return (
      <Fragment>
        <Nav transparent>
          <Container>
            <Input
              debounceTimeout={300}
              value={templateID}
              type="text"
              required
              onChange={event => this.chnageTemplateName(event.target.value)}
            />
          </Container>

          <Button to="#" onClick={this.save}>
            {typeTemplate} Template
          </Button>
        </Nav>
        <Section>
          <EmailEditor
            ref={editor => (this.editor = editor)}
            onLoad={this.load}
          />
        </Section>
      </Fragment>
    )
  }

  chnageTemplateName = name => {
    let oldTemplateID = this.state.templateID

    // removing old template from localstorage
    localStorage.removeItem(oldTemplateID)

    // Using set state callback to save the design after changing name.
    this.setState({ templateID: name }, () => {
      this.save(false)
    })
  }

  save = redirect => {
    this.editor.saveDesign(data => {
      // Saving data into localstorage
      localStorage.setItem(this.state.templateID, JSON.stringify(data))
      // Redirecitng to listing page
      if (redirect) {
        this.props.history.push("/")
      }
    })
  }

  load = () => {
    // Initializing the default sample data if new
    let data = sample
    // Parsing the templateID if edit
    let design = JSON.parse(localStorage.getItem(this.state.templateID))

    // Replacing the data with design if edit
    if (design) {
      data = design
    }

    /**
     * I trid with simple this.editor.loadDesign(data) .. but it's also working perfectly but
     * sometimes I am getting loadDesign undefined error, due to delay loading of React Email Editor
     * So I am putting a little work around here to initialize it first and then load design data.
     */

    // Add a hack here sometimes editor is not loading properly and onLoad is triggering too early
    setTimeout(() => this.editor.loadDesign(data), 0)
  }
}

export default Editor
